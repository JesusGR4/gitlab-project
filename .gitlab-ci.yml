variables:
    DOCKER_IMAGE: "registry:5000/$CI_PROJECT_NAME"
    DOCKER_REGISTRY: "registry:5000"
    TEMPORAL_VERSION: "TEMPORAL_${CI_COMMIT_SHA}"
    PROJECT: "gateway"
default:
  image: tmaier/docker-compose:latest
  services:
    - docker:dind
  before_script:
  - docker login -u admin -p $NEXUS_PASSWORD registry:5000
  - apk add make
  - apk update && apk add bash

stages:
  - build_base_application
  - build_application
  - test
  - release
  - publish

###############################################################
## BUILD BASE
###############################################################

build_base:
  stage: build_base_application
  script:
    - make make-base
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - products/**/*
      - test/**/*
      when: on_success

  

###############################################################
## BUILD PROJECTS
###############################################################

build-tester:
  stage: build_application
  script:
    - make make-test-base
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - products/**/*
      - test/**/*
      when: on_success

build_gateway:
  stage: build_application
  script:
    - make PROJECT="gateway" make-application
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - products/**/*
      - test/**/*
      when: on_success  
build_products:
  stage: build_application
  script:
    - make PROJECT="products" make-application 
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - products/**/*
      - test/**/*
      when: on_success  
build_orders:
  stage: build_application
  script:
    - make PROJECT="orders" make-application 
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - test/**/*
      when: on_success
###############################################################
## TEST APPLICATION
###############################################################

test-gateway:
  stage: test
  script:
    - make make-test-gateway
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - products/**/*
      - test/**/*
      when: on_success  

test_products:
  stage: test
  script:
    - make PROJECT="products" make-test-microservice
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - products/**/*
      - test/**/*
      when: on_success  

test_orders:
  stage: test
  script:
    - make PROJECT="orders" make-test-microservice
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - test/**/*
      when: on_success

###############################################################
## RELEASE PUBLISH
###############################################################


publish_release_gateway:
  stage: release
  script:
    - export RELEASE=${CI_COMMIT_REF_NAME#release/}
    - make PROJECT="gateway" make-publish-release
  only:
    - /^release*/
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - products/**/*
      - test/**/*
      when: on_success  
        
publish_release_products:
  stage: release
  script:
    - export RELEASE=${CI_COMMIT_REF_NAME#release/}
    - make PROJECT="products" make-publish-release
  only:
    - /^release*/
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - products/**/*
      - test/**/*
      when: on_success  
        
publish_release_orders:
  stage: release
  script:
    - export RELEASE=${CI_COMMIT_REF_NAME#release/}
    - make PROJECT="orders" make-publish-release
  only:
    - /^release*/
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - test/**/*
      when: on_success
###############################################################
## PUBLISH
###############################################################

publish_gateway:
  stage: publish
  script:
    - make PROJECT="gateway" make-publish 
  except:
    - /^release*/
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - products/**/*
      - test/**/*
      when: on_success    

publish_products:
  stage: publish
  script:
    - make PROJECT="products" make-publish 
  except:
    - /^release*/
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - products/**/*
      - test/**/*
      when: on_success    
publish_orders:
  stage: publish
  script:
    - make PROJECT="orders" make-publish
  rules:
    changes:
      - Dockerfile
      - requirements.txt
      - .coveragerc
      - gateway/**/*
      - orders/**/*
      - test/**/*
      when: on_success
  except:
    - /^release*/